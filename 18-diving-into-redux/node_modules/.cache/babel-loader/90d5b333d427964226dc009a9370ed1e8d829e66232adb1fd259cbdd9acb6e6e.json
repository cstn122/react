{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from './counterSlice';\nimport authReducer from './authSlice';\n\n// // the 'createStore' version\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       ...state,\n//       counter: state.counter + 1\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       ...state,\n//       counter: state.counter + action.payload\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       ...state,\n//       counter: state.counter - 1\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       ...state,\n//       showCounter: !state.showCounter\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterSlice.reducer);\n\n// merging multiple slices\n// multiple slices have only one store\nvar store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport var counterActions = counterSlice.actions; // automatically generates unique identifiers\nexport var authActions = authSlice.actions; // automatically generates unique identifiers\n\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","counterSlice","auth","authSlice","counterActions","actions","authActions"],"sources":["/home/anne/react/18-diving-into-redux/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from './counterSlice';\r\nimport authReducer from './authSlice';\r\n\r\n\r\n// // the 'createStore' version\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       ...state,\r\n//       counter: state.counter + 1\r\n//     };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       ...state,\r\n//       counter: state.counter + action.payload\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       ...state,\r\n//       counter: state.counter - 1\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       ...state,\r\n//       showCounter: !state.showCounter\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(counterSlice.reducer);\r\n\r\n\r\n\r\n// merging multiple slices\r\n// multiple slices have only one store\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer,\r\n    auth: authSlice.reducer\r\n  }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions; // automatically generates unique identifiers\r\nexport const authActions = authSlice.actions; // automatically generates unique identifiers\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,WAAW,MAAM,aAAa;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA,IAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACPC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEC,SAAS,CAACJ;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,IAAMK,cAAc,GAAGH,YAAY,CAACI,OAAO,CAAC,CAAC;AACpD,OAAO,IAAMC,WAAW,GAAGH,SAAS,CAACE,OAAO,CAAC,CAAC;;AAE9C,eAAeP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}