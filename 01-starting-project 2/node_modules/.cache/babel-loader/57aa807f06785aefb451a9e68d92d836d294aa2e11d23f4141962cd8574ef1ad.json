{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/01-starting-project 2/src/components/CourseGoals/CourseInput/CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n \n  margin: 0.5rem 0;\n\n & label {\n  color: ${props => props.invalid ? 'red' : 'transparent'};\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${props => props.invalid ? 'red' : '#ccc'};\n  background-color: ${props => props.invalid ? '#f7c4c7' : 'transparent'};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n&  input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n& .invalid input {\n  border-color: red;\n  background-color: #f7c4c7;\n}\n\n& .invalid label {\n  color: red;\n}\n\n`;\n_c = FormControl;\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      // string.trim() removes redundant blanks in the string\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      // alert('Cannot add empty goal!');\n      setIsValid(false);\n      return;\n    } else {\n      props.onAddGoal(enteredValue);\n      setIsValid(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: `form-control ${isValid ? '' : 'invalid'}`,\n      invalid: !isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), \"/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"Ni07CKV3TMNSLbvOpvFwyLAEJlc=\");\n_c2 = CourseInput;\nexport default CourseInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","styled","jsxDEV","_jsxDEV","FormControl","div","props","invalid","_c","CourseInput","_s","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c2","$RefreshReg$"],"sources":["/home/anne/react/01-starting-project 2/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport styled from 'styled-components';\n\nconst FormControl = styled.div`\n \n  margin: 0.5rem 0;\n\n & label {\n  color: ${props => (props.invalid ? 'red' : 'transparent')};\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${props => (props.invalid ? 'red' : '#ccc')};\n  background-color: ${props => (props.invalid ? '#f7c4c7' : 'transparent')};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n&  input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n& .invalid input {\n  border-color: red;\n  background-color: #f7c4c7;\n}\n\n& .invalid label {\n  color: red;\n}\n\n`;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {  // string.trim() removes redundant blanks in the string\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      // alert('Cannot add empty goal!');\n      setIsValid(false);\n      return;\n    }\n    else {\n      props.onAddGoal(enteredValue);\n      setIsValid(true);\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <FormControl \n        className={`form-control ${isValid ? '' : 'invalid'}`}\n        invalid={!isValid}\n        >\n        {/* 'form-control' + {isValid ? '' : 'invalid'} */}\n        <label>Course Goal</label>\n        <input\n          type='text'\n          onChange={goalInputChangeHandler}\n        />\n      </FormControl>\n      <Button type='submit'>Add Goal</Button>/\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA,WAAWC,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,KAAK,GAAG,aAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBD,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,KAAK,GAAG,MAAQ;AAChE,sBAAsBD,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,aAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GApCIJ,WAAW;AAsCjB,MAAMK,WAAW,GAAGH,KAAK,IAAI;EAAAI,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMgB,sBAAsB,GAAGC,KAAK,IAAI;IACtC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MAAG;MAC3CN,UAAU,CAAC,IAAI,CAAC;IAClB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAGL,KAAK,IAAI;IACjCA,KAAK,CAACM,cAAc,EAAE;IACtB,IAAIX,YAAY,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACpC;MACAN,UAAU,CAAC,KAAK,CAAC;MACjB;IACF,CAAC,MACI;MACHR,KAAK,CAACiB,SAAS,CAACZ,YAAY,CAAC;MAC7BG,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,oBACEX,OAAA;IAAMqB,QAAQ,EAAEH,iBAAkB;IAAAI,QAAA,gBAChCtB,OAAA,CAACC,WAAW;MACVsB,SAAS,EAAG,gBAAeb,OAAO,GAAG,EAAE,GAAG,SAAU,EAAE;MACtDN,OAAO,EAAE,CAACM,OAAQ;MAAAY,QAAA,gBAGlBtB,OAAA;QAAAsB,QAAA,EAAO;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1B3B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEjB;MAAuB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACU,eACd3B,OAAA,CAACH,MAAM;MAAC+B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,KACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAEX,CAAC;AAACpB,EAAA,CAxCID,WAAW;AAAAwB,GAAA,GAAXxB,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}