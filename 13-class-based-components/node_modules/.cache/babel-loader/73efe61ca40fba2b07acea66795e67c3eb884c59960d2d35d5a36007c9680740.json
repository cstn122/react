{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/13-class-based-components/src/components/UserFinder.js\";\nimport { Fragment } from 'react';\nimport { Component } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\n\n// const DUMMY_USERS = [\n//     { id: 'u1', name: 'Max' },\n//     { id: 'u2', name: 'Manuel' },\n//     { id: 'u3', name: 'Julie' },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserFinder extends Component {\n  constructor() {\n    super(); // to inherit Component\n    this.state = {\n      // define a set of states in an object, assign their initial values\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n  componentDidMount() {\n    // only run once when initial render\n    // send http request to connect to database here\n    this.setState({\n      filteredUsers: DUMMY_USERS\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // equal to useEffect(func, [dep]), update filter only when it changes\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      // if filter changed\n      this.setState({\n        // update the values of shown user list via state setting\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  searchChangeHandler(event) {\n    // set input box when typing\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n// const UserFinder = () => {\n//     const DUMMY_USERS = [\n//         { id: 'u1', name: 'Max' },\n//         { id: 'u2', name: 'Manuel' },\n//         { id: 'u3', name: 'Julie' },\n//     ];\n//     const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         setFilteredUsers(\n//             DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//         );\n//     }, [searchTerm]);\n\n//     const searchChangeHandler = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     return (\n//         <Fragment>\n//             <div className={classes.finder}>\n//                 <input type='search' onChange={searchChangeHandler} />\n//             </div>\n//             <Users users={filteredUsers} />\n//         </Fragment >\n//     );\n// };\n\nexport default UserFinder;","map":{"version":3,"names":["Fragment","Component","Users","classes","jsxDEV","_jsxDEV","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","DUMMY_USERS","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","children","className","finder","type","onChange","bind","fileName","_jsxFileName","lineNumber","columnNumber","users"],"sources":["/home/anne/react/13-class-based-components/src/components/UserFinder.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { Component } from 'react';\n\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\n\n// const DUMMY_USERS = [\n//     { id: 'u1', name: 'Max' },\n//     { id: 'u2', name: 'Manuel' },\n//     { id: 'u3', name: 'Julie' },\n// ];\n\nclass UserFinder extends Component {\n    constructor() {\n        super();  // to inherit Component\n        this.state = {  // define a set of states in an object, assign their initial values\n            filteredUsers: [],\n            searchTerm: '',\n        };\n    }\n\n    componentDidMount() {  // only run once when initial render\n        // send http request to connect to database here\n        this.setState({ filteredUsers: DUMMY_USERS });\n    }\n\n    componentDidUpdate(prevProps, prevState) {  // equal to useEffect(func, [dep]), update filter only when it changes\n        if (prevState.searchTerm !== this.state.searchTerm) {  // if filter changed\n            this.setState({  // update the values of shown user list via state setting\n                filteredUsers: DUMMY_USERS.filter((user) =>\n                    user.name.includes(this.state.searchTerm)\n                ),\n            });\n        }\n    }\n\n    searchChangeHandler(event) {  // set input box when typing\n        this.setState({ searchTerm: event.target.value });\n    }\n\n    render() {\n        return (\n        <Fragment>\n            <div className={classes.finder}>\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n            </div>\n            <Users users={this.state.filteredUsers} />\n        </Fragment>\n        );\n    }\n}\n\n// const UserFinder = () => {\n//     const DUMMY_USERS = [\n//         { id: 'u1', name: 'Max' },\n//         { id: 'u2', name: 'Manuel' },\n//         { id: 'u3', name: 'Julie' },\n//     ];\n//     const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         setFilteredUsers(\n//             DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//         );\n//     }, [searchTerm]);\n\n//     const searchChangeHandler = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     return (\n//         <Fragment>\n//             <div className={classes.finder}>\n//                 <input type='search' onChange={searchChangeHandler} />\n//             </div>\n//             <Users users={filteredUsers} />\n//         </Fragment >\n//     );\n// };\n\nexport default UserFinder;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,yBAAyB;;AAE7C;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,SAASL,SAAS,CAAC;EAC/BM,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE,CAAC,CAAE;IACV,IAAI,CAACC,KAAK,GAAG;MAAG;MACZC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IAChB,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAAG;IACnB;IACA,IAAI,CAACC,QAAQ,CAAC;MAAEH,aAAa,EAAEI;IAAY,CAAC,CAAC;EACjD;EAEAC,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IAAG;IACxC,IAAIA,SAAS,CAACN,UAAU,KAAK,IAAI,CAACF,KAAK,CAACE,UAAU,EAAE;MAAG;MACnD,IAAI,CAACE,QAAQ,CAAC;QAAG;QACbH,aAAa,EAAEI,WAAW,CAACI,MAAM,CAAEC,IAAI,IACnCA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACZ,KAAK,CAACE,UAAU,CAAC;MAEjD,CAAC,CAAC;IACN;EACJ;EAEAW,mBAAmBA,CAACC,KAAK,EAAE;IAAG;IAC1B,IAAI,CAACV,QAAQ,CAAC;MAAEF,UAAU,EAAEY,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACrD;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACApB,OAAA,CAACL,QAAQ;MAAA0B,QAAA,gBACLrB,OAAA;QAAKsB,SAAS,EAAExB,OAAO,CAACyB,MAAO;QAAAF,QAAA,eAC3BrB,OAAA;UAAOwB,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAE,IAAI,CAACT,mBAAmB,CAACU,IAAI,CAAC,IAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpE,eACN9B,OAAA,CAACH,KAAK;QAACkC,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACC;MAAc;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC;EAEf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}