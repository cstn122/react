{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/13-class-based-components/src/components/UserFinder.js\";\nimport { Fragment } from 'react';\nimport { Component } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: 'u1',\n  name: 'Max'\n}, {\n  id: 'u2',\n  name: 'Manuel'\n}, {\n  id: 'u3',\n  name: 'Julie'\n}];\nclass UserFinder extends Component() {\n  constructor(DUMMY_USERS) {\n    super(); // to inherit the Components\n    this.searchChangeHandler = event => {\n      // set input box when typing\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n    this.state = {\n      // define a set of states in an object, assign their initial values\n      filteredUsers: DUMMY_USERS,\n      searchTerm: ''\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // equal to useEffect(func, [dep]), update filter only when it changes\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      // if filter changed\n      this.setState({\n        // update the values of shown user list via state setting\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n// const UserFinder = () => {\n//     const DUMMY_USERS = [\n//         { id: 'u1', name: 'Max' },\n//         { id: 'u2', name: 'Manuel' },\n//         { id: 'u3', name: 'Julie' },\n//     ];\n//     const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         setFilteredUsers(\n//             DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//         );\n//     }, [searchTerm]);\n\n//     const searchChangeHandler = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     return (\n//         <Fragment>\n//             <div className={classes.finder}>\n//                 <input type='search' onChange={searchChangeHandler} />\n//             </div>\n//             <Users users={filteredUsers} />\n//         </Fragment >\n//     );\n// };\n\nexport default UserFinder;","map":{"version":3,"names":["Fragment","Component","Users","classes","jsxDEV","_jsxDEV","DUMMY_USERS","id","name","UserFinder","constructor","searchChangeHandler","event","setState","searchTerm","target","value","state","filteredUsers","componentDidUpdate","prevProps","prevState","filter","user","includes","render","children","className","finder","type","onChange","bind","fileName","_jsxFileName","lineNumber","columnNumber","users"],"sources":["/home/anne/react/13-class-based-components/src/components/UserFinder.js"],"sourcesContent":["import { Fragment} from 'react';\nimport { Component } from 'react';\n\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\n\nconst DUMMY_USERS = [\n    { id: 'u1', name: 'Max' },\n    { id: 'u2', name: 'Manuel' },\n    { id: 'u3', name: 'Julie' },\n];\n\nclass UserFinder extends Component() {\n    constructor(DUMMY_USERS) {\n        super();  // to inherit the Components\n        this.state = {  // define a set of states in an object, assign their initial values\n            filteredUsers: DUMMY_USERS,\n            searchTerm: '',\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {  // equal to useEffect(func, [dep]), update filter only when it changes\n        if (prevState.searchTerm !== this.state.searchTerm) {  // if filter changed\n            this.setState({  // update the values of shown user list via state setting\n                filteredUsers: DUMMY_USERS.filter((user) =>\n                    user.name.includes(this.state.searchTerm)\n                ),\n            });\n        }\n    }\n\n    searchChangeHandler = (event) => {  // set input box when typing\n        this.setState({\n            searchTerm: event.target.value\n        });\n    };\n\n    render() {\n        return (<Fragment>\n            <div className={classes.finder}>\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n            </div>\n            <Users users={this.state.filteredUsers} />\n        </Fragment>);\n    }\n}\n\n// const UserFinder = () => {\n//     const DUMMY_USERS = [\n//         { id: 'u1', name: 'Max' },\n//         { id: 'u2', name: 'Manuel' },\n//         { id: 'u3', name: 'Julie' },\n//     ];\n//     const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         setFilteredUsers(\n//             DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//         );\n//     }, [searchTerm]);\n\n//     const searchChangeHandler = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     return (\n//         <Fragment>\n//             <div className={classes.finder}>\n//                 <input type='search' onChange={searchChangeHandler} />\n//             </div>\n//             <Users users={filteredUsers} />\n//         </Fragment >\n//     );\n// };\n\nexport default UserFinder;"],"mappings":";AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAG,CAChB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAM,CAAC,EACzB;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC5B;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC9B;AAED,MAAMC,UAAU,SAASR,SAAS,EAAE,CAAC;EACjCS,WAAWA,CAACJ,WAAW,EAAE;IACrB,KAAK,EAAE,CAAC,CAAE;IAAA,KAiBdK,mBAAmB,GAAIC,KAAK,IAAK;MAAG;MAChC,IAAI,CAACC,QAAQ,CAAC;QACVC,UAAU,EAAEF,KAAK,CAACG,MAAM,CAACC;MAC7B,CAAC,CAAC;IACN,CAAC;IApBG,IAAI,CAACC,KAAK,GAAG;MAAG;MACZC,aAAa,EAAEZ,WAAW;MAC1BQ,UAAU,EAAE;IAChB,CAAC;EACL;EAEAK,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IAAG;IACxC,IAAIA,SAAS,CAACP,UAAU,KAAK,IAAI,CAACG,KAAK,CAACH,UAAU,EAAE;MAAG;MACnD,IAAI,CAACD,QAAQ,CAAC;QAAG;QACbK,aAAa,EAAEZ,WAAW,CAACgB,MAAM,CAAEC,IAAI,IACnCA,IAAI,CAACf,IAAI,CAACgB,QAAQ,CAAC,IAAI,CAACP,KAAK,CAACH,UAAU,CAAC;MAEjD,CAAC,CAAC;IACN;EACJ;EAQAW,MAAMA,CAAA,EAAG;IACL,oBAAQpB,OAAA,CAACL,QAAQ;MAAA0B,QAAA,gBACbrB,OAAA;QAAKsB,SAAS,EAAExB,OAAO,CAACyB,MAAO;QAAAF,QAAA,eAC3BrB,OAAA;UAAOwB,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAE,IAAI,CAACnB,mBAAmB,CAACoB,IAAI,CAAC,IAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpE,eACN9B,OAAA,CAACH,KAAK;QAACkC,KAAK,EAAE,IAAI,CAACnB,KAAK,CAACC;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}