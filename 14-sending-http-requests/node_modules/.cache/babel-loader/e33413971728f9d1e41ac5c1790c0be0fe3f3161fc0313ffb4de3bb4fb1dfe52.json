{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/14-sending-http-requests/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useDebugValue } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchMoviesHandler() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('https://swapi.dev/api/film');\n        if (!response.ok) {\n          throw new Error('Something went wrong.');\n        }\n        const data = await response.json();\n        const transformedMovies = data.results.map(movieData => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            releaseDate: movieData.release_date,\n            openingText: movieData.opening_crawl\n          };\n        });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  }, []);\n  let content = /*#__PURE__*/_jsxDEV(MoviesList, {\n    movies: movies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }, this);\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this);\n  } else if (movies.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this);\n  }\n  if (error !== null) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gvvaxtNEH69eVRFSOgl7uh+ZsGU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDebugValue","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","content","fileName","_jsxFileName","lineNumber","columnNumber","children","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["/home/anne/react/14-sending-http-requests/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useDebugValue } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/film');\n      \n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n      const data = await response.json();\n\n      const transformedMovies = data.results.map(movieData => {\n        return ({\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl,\n        });\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }}, []);\n\n  let content = <MoviesList movies={movies} />;\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  } else if (movies.length === 0) {\n    content = <p>No movies found.</p>;\n  }\n\n  if (error !== null) {\n    content = <p>{error}</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}