{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/14-sending-http-requests/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // // this creates an infinite loop!\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // const response = await fetch('https://swapi.dev/api/films');\n      const response = await fetch('https://react-http-5a556-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          releaseDate: data[key].release_date,\n          openingText: data[key].opening_crawl\n        });\n      }\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-5a556-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  let content = /*#__PURE__*/_jsxDEV(MoviesList, {\n    movies: movies\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }, this);\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this);\n  } else if (movies.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this);\n  }\n  if (error !== null) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t12covX+RDshjMOba2pEjObRrcg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","releaseDate","release_date","openingText","opening_crawl","transformedData","results","map","movieData","episode_id","transformedMovies","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","fileName","_jsxFileName","lineNumber","columnNumber","children","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/home/anne/react/14-sending-http-requests/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // // this creates an infinite loop!\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // const response = await fetch('https://swapi.dev/api/films');\n      const response = await fetch('https://react-http-5a556-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      }\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          releaseDate: data[key].release_date,\n          openingText: data[key].opening_crawl,\n        })\n      }\n\n      const transformedData = data.results.map(movieData => {\n        return ({\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl,\n        });\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-5a556-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = <MoviesList movies={movies} />;\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  } else if (movies.length === 0) {\n    content = <p>No movies found.</p>;\n  }\n\n  if (error !== null) {\n    content = <p>{error}</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section><AddMovie onAddMovie={addMovieHandler} /></section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}