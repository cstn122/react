{"ast":null,"code":"var _jsxFileName = \"/home/anne/react/03-userdata/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.module.css';\nimport AddUser from './components/NewUser/AddUser';\nimport UserList from './components/UserList/UserList';\nimport AlertWindow from './components/AlertWindow/AlertWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USER_DATA = [{\n  id: 'u1',\n  name: 'Max',\n  age: 30\n}, {\n  id: 'u2',\n  name: 'Anne',\n  age: 20\n}];\nconst App = props => {\n  _s();\n  const [userList, setUserList] = useState(DUMMY_USER_DATA);\n  const saveDataHandler = userList => {\n    // updatedData = userList.unshift(props.userData);\n    // console.log('Data updated!')\n    // return updatedData;\n\n    console.log('validity check in App.js');\n    console.log('name is valid? ' + props.nameIsValid);\n    console.log('age is valid? ' + props.ageIsValid);\n\n    // invalid name & age\n    if (props.nameIsValid === false || props.ageIsValid === false) {\n      // return <AlertWindow nameIsValid={props.nameIsValid} ageIsValid={props.ageIsValid} />;\n      alert('invalid input occured');\n    } else {\n      setUserList(prevData => {\n        return [userList, ...prevData];\n      });\n    }\n  };\n\n  // valid input\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      saveUserData: saveDataHandler,\n      onNameIsValid: props.nameIsValid,\n      onAgeIsValid: props.ageIsValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      userData: userList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"2hvI05DKKlxSO7R2fZW3dqy4QH0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddUser","UserList","AlertWindow","jsxDEV","_jsxDEV","DUMMY_USER_DATA","id","name","age","App","props","_s","userList","setUserList","saveDataHandler","console","log","nameIsValid","ageIsValid","alert","prevData","className","children","saveUserData","onNameIsValid","onAgeIsValid","fileName","_jsxFileName","lineNumber","columnNumber","userData","_c","$RefreshReg$"],"sources":["/home/anne/react/03-userdata/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.module.css';\n\nimport AddUser from './components/NewUser/AddUser';\nimport UserList from './components/UserList/UserList';\nimport AlertWindow from './components/AlertWindow/AlertWindow';\n\nconst DUMMY_USER_DATA = [\n    {\n        id: 'u1',\n        name: 'Max',\n        age: 30\n    },\n    {\n        id: 'u2',\n        name: 'Anne',\n        age: 20\n    }\n];\n\nconst App = props => {\n    const [userList, setUserList] = useState(DUMMY_USER_DATA);\n    const saveDataHandler = userList => {\n        // updatedData = userList.unshift(props.userData);\n        // console.log('Data updated!')\n        // return updatedData;\n        \n        console.log('validity check in App.js');\n        console.log('name is valid? ' + props.nameIsValid);\n        console.log('age is valid? ' + props.ageIsValid);\n\n        // invalid name & age\n        if ((props.nameIsValid === false) || (props.ageIsValid === false)) {\n            // return <AlertWindow nameIsValid={props.nameIsValid} ageIsValid={props.ageIsValid} />;\n            alert('invalid input occured');\n        } else {\n            setUserList(prevData => { return [userList, ...prevData]; })\n        }\n    };\n\n    // valid input\n    return <div className='body'>\n        <AddUser saveUserData={saveDataHandler} onNameIsValid={props.nameIsValid} onAgeIsValid={props.ageIsValid} />\n        {/* <AddUser saveUserData={saveDataHandler} /> */}\n        <UserList userData={userList} />\n    </div>\n\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAEzB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,eAAe,GAAG,CACpB;EACIC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,KAAK;EACXC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE;AACT,CAAC,CACJ;AAED,MAAMC,GAAG,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACM,eAAe,CAAC;EACzD,MAAMS,eAAe,GAAGF,QAAQ,IAAI;IAChC;IACA;IACA;;IAEAG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCD,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,KAAK,CAACO,WAAW,CAAC;IAClDF,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGN,KAAK,CAACQ,UAAU,CAAC;;IAEhD;IACA,IAAKR,KAAK,CAACO,WAAW,KAAK,KAAK,IAAMP,KAAK,CAACQ,UAAU,KAAK,KAAM,EAAE;MAC/D;MACAC,KAAK,CAAC,uBAAuB,CAAC;IAClC,CAAC,MAAM;MACHN,WAAW,CAACO,QAAQ,IAAI;QAAE,OAAO,CAACR,QAAQ,EAAE,GAAGQ,QAAQ,CAAC;MAAE,CAAC,CAAC;IAChE;EACJ,CAAC;;EAED;EACA,oBAAOhB,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACxBlB,OAAA,CAACJ,OAAO;MAACuB,YAAY,EAAET,eAAgB;MAACU,aAAa,EAAEd,KAAK,CAACO,WAAY;MAACQ,YAAY,EAAEf,KAAK,CAACQ;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAE5GzB,OAAA,CAACH,QAAQ;MAAC6B,QAAQ,EAAElB;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;AAEV,CAAC;AAAClB,EAAA,CA3BIF,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}