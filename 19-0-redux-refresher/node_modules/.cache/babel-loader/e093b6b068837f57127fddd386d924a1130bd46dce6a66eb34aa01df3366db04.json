{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst CartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      if (!existingItem) {\n        state.items.push({\n          name: action.payload.title,\n          itemId: action.payload.id,\n          price: action.payload.price,\n          quantity: 1,\n          totalPrice: action.payload.price\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += action.payload.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const existingItem = state.items.find(item => item.id === action.payload);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== action.payload);\n      } else {\n        existingItem.quantity -= 1;\n      }\n    }\n  }\n});\nexport default CartSlice;\nexport const CartSliceActions = CartSlice.actions;","map":{"version":3,"names":["createSlice","CartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","existingItem","find","item","id","payload","push","title","itemId","price","quantity","totalPrice","removeItemFromCart","filter","CartSliceActions","actions"],"sources":["/home/anne/react/19-0-redux-refresher/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const existingItem = state.items.find(item => item.id === action.payload.id);\n            if (!existingItem) {\n                state.items.push({\n                    name: action.payload.title,\n                    itemId: action.payload.id,\n                    price: action.payload.price,\n                    quantity: 1,\n                    totalPrice: action.payload.price,\n                })\n            } else {\n                existingItem.quantity += 1;\n                existingItem.totalPrice += action.payload.price;\n            }\n        },\n        removeItemFromCart(state, action) {\n            const existingItem = state.items.find(item => item.id === action.payload);\n            if(existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== action.payload)\n            } else {\n                existingItem.quantity -= 1;\n            }\n        },\n    },\n});\n\nexport default CartSlice;\nexport const CartSliceActions = CartSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,YAAY,GAAGF,KAAK,CAACJ,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC5E,IAAI,CAACH,YAAY,EAAE;QACfF,KAAK,CAACJ,KAAK,CAACW,IAAI,CAAC;UACbb,IAAI,EAAEO,MAAM,CAACK,OAAO,CAACE,KAAK;UAC1BC,MAAM,EAAER,MAAM,CAACK,OAAO,CAACD,EAAE;UACzBK,KAAK,EAAET,MAAM,CAACK,OAAO,CAACI,KAAK;UAC3BC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEX,MAAM,CAACK,OAAO,CAACI;QAC/B,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,YAAY,CAACS,QAAQ,IAAI,CAAC;QAC1BT,YAAY,CAACU,UAAU,IAAIX,MAAM,CAACK,OAAO,CAACI,KAAK;MACnD;IACJ,CAAC;IACDG,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMC,YAAY,GAAGF,KAAK,CAACJ,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACzE,IAAGJ,YAAY,CAACS,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACxE,CAAC,MAAM;QACHJ,YAAY,CAACS,QAAQ,IAAI,CAAC;MAC9B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAelB,SAAS;AACxB,OAAO,MAAMsB,gBAAgB,GAAGtB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}